openapi: 3.0.0
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Toggly/Core/1.0.0
  - url: /v1
    description: V1

info:
  description: This is a Toggly API
  version: "1.0.0"
  title: Toggly Core Service API
  contact:
    email: vasmik@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:

  # Project

  '/project':

    get:
      summary: Projects list
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
        '404':
          description: not found
        '400':
          description: bad request

    post:
      summary: Create project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: project info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          description: bad request

    put:
      summary: Update project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: project info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          description: bad request


  '/project/{project_code}':

    get:
      summary: Get project information
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
      responses:
        '200':
          description: project information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '400':
          description: bad request
        '404':
          description: project not found

    delete:
      summary: Delete project
      tags:
        - Project
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
      responses:
        '200':
          description: project succesfully deleted
        '400':
          description: bad request
        '404':
          description: project not found


  # Environment

  '/project/{project_code}/env':

    get:
      summary: List of environments for project
      tags:
        - Environment
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
      responses:
        '200':
          description: list of environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
        '404':
          description: not found

    post:
      summary: Create environment
      tags:
        - Environment
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '200':
          description: environment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '400':
          description: bad request
        '404':
          description: project not found

    put:
      summary: Update environment
      tags:
        - Environment
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRequest'
      responses:
        '200':
          description: environment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '400':
          description: bad request
        '404':
          description: project not found

  '/project/{project_code}/env/{env_code}':

    get:
      summary: Environment information
      tags:
        - Environment
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
      responses:
        '200':
          description: project information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
        '400':
          description: project not found

    delete:
      summary: Delete environment
      tags:
        - Environment
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
      responses:
        '200':
          description: environment succesfully deleted
        '400':
          description: bad request
        '404':
          description: project|environment not found


  # Object

  '/project/{project_code}/env/{env_code}/object':

    get:
      summary: List of objects for environment
      tags:
        - Object
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
      responses:
        '200':
          description: list of objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectResponse'
        '400':
          description: bad request
        '404':
          description: project|environment not found

    post:
      summary: Create object
      tags:
        - Object
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectRequest'
      responses:
        '200':
          description: Object information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
        '400':
          description: bad request
        '404':
          description: project|environment not found

    put:
      summary: Update object
      tags:
        - Object
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectRequest'
      responses:
        '200':
          description: Object information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
        '400':
          description: bad request
        '404':
          description: project|environment not found


  '/project/{project_code}/env/{env_code}/object/{obj_code}':

    get:
      summary: list of objects for environment
      tags:
        - Object
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
        - $ref: '#/components/parameters/objectCode'
      responses:
        '200':
          description: object information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
        '404':
          description: project|environment|object not found

    delete:
      summary: delete object
      tags:
        - Object
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: '#/components/parameters/ownerId'
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/projectCode'
        - $ref: '#/components/parameters/envCode'
        - $ref: '#/components/parameters/objectCode'
      responses:
        '200':
          description: object succesfully deleted
        '404':
          description: project|environment|object not found

components:

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Toggly-Auth

  parameters:

    ownerId:
      in: header
      name: X-Toggly-Owner-Id
      schema:
        type: string

    requestId:
      in: header
      name: X-Toggly-Request-Id
      required: false
      schema:
        type: string

    projectCode:
      in: path
      name: project_code
      required: true
      schema:
        type: string

    envCode:
      in: path
      name: env_code
      required: true
      schema:
        type: string

    objectCode:
      in: path
      name: obj_code
      required: true
      schema:
        type: string

  schemas:

    ProjectRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: "project1"
        description:
          type: string
          example: "Project description"
        status:
          type: string
          enum: ["active", "disabled"]
          example: "active"


    ProjectResponse:
      type: object
      properties:
        owner:
          type: string
          example: "owner1"
        code:
          type: string
          example: "project1"
        description:
          type: string
          example: "Project description"
        status:
          type: string
          example: "active"
        reg_date:
          type: string
          example: "2018-10-12T23:47:18.967Z"

    EnvironmentRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: dev
        description:
          type: string
          example: "Development environment"
        protected:
          type: boolean
          example: false

    EnvironmentResponse:
      type: object
      properties:
        owner:
          type: string
          example: "owner1"
        project_code:
          type: string
          example: "project1"
        code:
          type: string
          example: "dev"
        description:
          type: string
          example: "Development environment"
        protected:
          type: boolean
          example: false
        reg_date:
          type: string
          example: "2018-10-12T23:47:18.967Z"

    ObjectRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          example: "obj1"
        description:
          type: string
          example: "Object 1 description"
        inherits:
          $ref: "#/components/schemas/Inheritanse"
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'

    ObjectResponse:
      type: object
      properties:
        code:
          type: string
          example: "user"
        owner:
          type: string
          example: "owner1"
        project_code:
          type: string
          example: "project1"
        env_code:
          type: string
          example: "env1"
        description:
          type: string
          example: "Object 1 description"
        inherits:
          $ref: "#/components/schemas/Inheritanse"
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'


    Inheritanse:
      type: object
      required:
        - project_code
        - env_code
        - object_code
      properties:
        project_code:
          type: string
          example: "project1"
        env_code:
          type: string
          example: "env1"
        object_code:
          type: string
          example: "obj0"

    Parameter:
      type: object
      required:
        - code
        - type
        - value
      properties:
        code:
          type: string
          example: "parameter1"
        description:
          type: string
          example: "Parameter 1"
        type:
          type: string
          enum: ["bool", "string", "int", "enum"]
          example: "bool"
        value:
          type: object
          example: false